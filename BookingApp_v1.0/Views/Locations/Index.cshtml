@model IEnumerable<BookingApp_v1._0.Models.Location>

@{
    ViewBag.Title = "Locations";
}

<div class="container mt-4">
    <h2 class="text-center mb-4">Locations</h2>

    @if (TempData["LocationCreate"] != null)
    {
        <div class="alert alert-success">
            <strong>@TempData["LocationCreate"]</strong>
        </div>
    }

    @if (TempData["LocationEdit"] != null)
    {
        <div class="alert alert-success">
            <strong>@TempData["LocationEdit"]</strong>
        </div>
    }

    @if (TempData["LocationDelete"] != null)
    {
        <div class="alert alert-danger">
            <strong>@TempData["LocationDelete"]</strong>
        </div>
    }

    <div class="mb-3">
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    </div>

    <div class="table-responsive">
        <table id="locationsTable" class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>SL No</th> <!-- Serial Number Column -->
                    <th>@Html.DisplayNameFor(model => model.LocationName)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count(); i++)
                {
                    var item = Model.ElementAt(i);
                    <tr>
                        <td>@(i + 1)</td> <!-- Display Serial Number -->
                        <td>@Html.DisplayFor(modelItem => item.LocationName)</td>
                        <td class="text-overflow">@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.LocationId }, new { @class = "btn btn-warning btn-sm" }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.LocationId }, new { @class = "btn btn-danger btn-sm" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#locationsTable').DataTable({
                searching: true,
                paging: true,
                ordering: true,
                lengthMenu: [5, 10, 25, 50, 100],
                pageLength: 10
            });
        });
    </script>
}

<style>
    /* Limit description column width and apply ellipsis for overflow */
    .text-overflow {
        max-width: 300px; /* Set the maximum width for the description column */
        white-space: nowrap; /* Prevent the text from wrapping */
        overflow: hidden; /* Hide the overflowed content */
        text-overflow: ellipsis; /* Show ellipsis (...) for overflowed text */
    }

    /* Optionally make the table horizontally scrollable */
    .table-responsive {
        overflow-x: auto; /* Enable horizontal scrolling if table content overflows */
    }
</style>
